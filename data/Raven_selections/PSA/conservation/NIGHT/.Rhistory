Nat2Past$Type <- "Natural_Regeneration"
colnames(Nat2Past) <- c("Timebin", "Distance", "FrequencyCat", "Type")
Ref2Past <- Dist2Pasture %>% subset(select = c(nearest_10, distance_ref, freq_category))
Ref2Past$Type <- "Reference_Forest"
colnames(Ref2Past) <- c("Timebin", "Distance", "FrequencyCat", "Type")
Plant2Past <- Dist2Pasture %>% subset(select = c(nearest_10, distance_plant, freq_category))
Plant2Past$Type <- "Plantation"
colnames(Plant2Past) <- c("Timebin", "Distance", "FrequencyCat", "Type")
#End up with re-formatted Dataframe
Dist2PastRows <- rbind(Nat2Past, Ref2Past, Plant2Past)
Nat2Ref <- Dist2Reference %>% subset(select = c(nearest_10, distance_nat, freq_category))
Nat2Ref$Type <- "Natural_Regeneration"
colnames(Nat2Ref) <- c("Timebin", "Distance", "FrequencyCat", "Type")
Past2Ref <- Dist2Reference %>% subset(select = c(nearest_10, distance_past, freq_category))
Past2Ref$Type <- "Pasture"
colnames(Past2Ref) <- c("Timebin", "Distance", "FrequencyCat", "Type")
Plant2Ref <- Dist2Reference %>% subset(select = c(nearest_10, distance_plant, freq_category))
Plant2Ref$Type <- "Plantation"
colnames(Plant2Ref) <- c("Timebin", "Distance", "FrequencyCat", "Type")
#End up with re-formatted Dataframe
Dist2RefRows <- rbind(Nat2Ref, Past2Ref, Plant2Ref)
#Find the max Distance, use it to add scaled Distance Values
max(Dist2RefRows$Distance)
max(Dist2PastRows$Distance)
#Max Distance = 474662.2; Between Plantation and Reference forest in Timebin 320 FreqCategory 4-5 kHz
Dist2RefRows <- Dist2RefRows %>% mutate(ScaledDistance = (Distance/474662.2))
Dist2PastRows <- Dist2PastRows %>% mutate(ScaledDistance = (Distance/474662.2))
View(Dist2RefRows)
hist(Dist2RefRows$ScaledDistance)
hist(Dist2RefRows$Distance)
hist(Dist2RefRows$ScaledDistance)
Dist2RefRows$Timebin <- as.factor(Dist2RefRows$Timebin)
Dist2PastRows$Timebin <- as.factor(Dist2PastRows$Timebin)
ggplot(Dist2RefRows[Dist2RefRows$Type=="Pasture",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Pastures",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2RefRows[Dist2RefRows$Type=="Plantation",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Plantations",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2RefRows[Dist2RefRows$Type=="Natural_Regeneration",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Pastures",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2PastRows[Dist2PastRows$Type=="Plantation",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Pastures to Plantations",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2PastRows[Dist2PastRows$Type=="Natural_Regeneration",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Natural Regeneration to Pastures",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2RefRows[Dist2RefRows$Type=="Pasture",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Pastures",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggboxplot(Dist2RefRows, x = "Type", y = "scaledDistance", add = "jitter")
ggboxplot(Dist2RefRows, x = "Type", y = "ScaledDistance", add = "jitter")
ggboxplot(Dist2PastRows, x = "Type", y = "ScaledDistance", add = "jitter")
Dist2RefRows %>%
group_by(Type) %>%
get_summary_stats(meanDistance, type = "common") %>% ungroup()
#Now just summary stats
Dist2RefRows %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2PastRows %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
includedtimes <- merged_data %>% subset(include == "TRUE") %>% subset(select = nearest_10) %>% unique()
includedtimes <- as.vector(includedtimes$nearest_10)
Dist2PastTimes <- Dist2PastRows %>% subset(Timebin %in% includedtimes)
Dist2RefTimes <- Dist2RefRows %>% subset(Timebin %in% includedtimes)
ggplot(Dist2RefTimes[Dist2RefTimes$Type=="Pasture",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Pastures",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
includedtimes <- merged_data %>% subset(include == "TRUE") %>% subset(select = nearest_10) %>% unique()
includedtimes <- as.vector(includedtimes$nearest_10)
Dist2PastTimes <- Dist2PastRows %>% subset(Timebin %in% includedtimes)
Dist2RefTimes <- Dist2RefRows %>% subset(Timebin %in% includedtimes)
Dist2RefTimes$Timebin <- as.factor(Dist2RefTimes$Timebin)
Dist2PastTimes$Timebin <- as.factor(Dist2PastTimes$Timebin)
ggplot(Dist2RefTimes[Dist2RefTimes$Type=="Pasture",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Pastures",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2RefTimes[Dist2RefTimes$Type=="Plantation",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Plantation",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2RefTimes[Dist2RefTimes$Type=="Natural_Regeneration",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Natural Regeneration",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2PastTimes[Dist2PastTimes$Type=="Plantation",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Pastures to Plantations",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2PastTimes[Dist2PastTimes$Type=="Natural_Regeneration",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Natural Regeneration to Pastures",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggboxplot(Dist2RefTimes, x = "Type", y = "ScaledDistance", add = "jitter")
ggboxplot(Dist2PastTimes, x = "Type", y = "ScaledDistance", add = "jitter")
#Now just summary stats
Dist2RefTimes %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2PastTimes %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2RefInter <- Dist2RefTimes %>% subset(FrequencyCat %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz"))
Dist2PastInter <- Dist2PastTimes %>% subset(FrequencyCat %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz"))
Dist2RefInter <- Dist2RefTimes %>% subset(FrequencyCat %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz"))
Dist2PastInter <- Dist2PastTimes %>% subset(FrequencyCat %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz"))
Dist2RefInter$Timebin <- as.factor(Dist2RefInter$Timebin)
Dist2PastInter$Timebin <- as.factor(Dist2PastInter$Timebin)
ggplot(Dist2RefInter[Dist2RefInter$Type=="Pasture",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Pastures",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2RefInter[Dist2RefInter$Type=="Plantation",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Plantation",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2RefInter[Dist2RefInter$Type=="Natural_Regeneration",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Natural Regeneration",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2PastInter[Dist2PastInter$Type=="Plantation",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Pastures to Plantations",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2PastInter[Dist2PastInter$Type=="Natural_Regeneration",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Natural Regeneration to Pastures",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggboxplot(Dist2RefInter, x = "Type", y = "ScaledDistance", add = "jitter")
ggboxplot(Dist2PastInter, x = "Type", y = "ScaledDistance", add = "jitter")
#Now just summary stats
Dist2RefInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2PastInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefall <- Dist2PastTimes %>% subset(Type == "Natural_Regeneration")
PasttoRefupper <- Dist2PastTimes %>% subset(FrequencyCat %notin% c("0-1 kHz", "1-2 kHz", "2-3 kHz")) %>% mutate(Split = "Upper")
PasttoRefall$Split <- "All"
PasttoRef <- rbind(PasttoRefall, PasttoRefupper)
AovPastRef <- aov(Distance ~ Split, data = PasttoRef)
summary(AovPastRef)
TukeyHSD(AovPastRef)
ggboxplot(PasttoRef, x = "Split", y = "Distance", add = "jitter")
PasttoRefall %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefUpper %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefupper <- Dist2PastTimes %>% subset(FrequencyCat %notin% c("0-1 kHz", "1-2 kHz", "2-3 kHz")) %>% mutate(Split = "Upper")
PasttoRefall <- Dist2PastTimes %>% subset(Type == "Natural_Regeneration")
PasttoRefupper <- Dist2PastTimes %>% subset(FrequencyCat %notin% c("0-1 kHz", "1-2 kHz", "2-3 kHz")) %>% mutate(Split = "Upper")
PasttoRefall$Split <- "All"
PasttoRef <- rbind(PasttoRefall, PasttoRefupper)
AovPastRef <- aov(Distance ~ Split, data = PasttoRef)
summary(AovPastRef)
TukeyHSD(AovPastRef)
PasttoRefall %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefUpper %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefupper %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefall <- Dist2PastTimes %>% subset(Type == "Natural_Regeneration")
PasttoRefupper <- PasttoRefall %>% subset(FrequencyCat %notin% c("0-1 kHz", "1-2 kHz", "2-3 kHz")) %>% mutate(Split = "Upper")
PasttoRefall$Split <- "All"
PasttoRef <- rbind(PasttoRefall, PasttoRefupper)
AovPastRef <- aov(Distance ~ Split, data = PasttoRef)
summary(AovPastRef)
TukeyHSD(AovPastRef)
PasttoRefall %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefupper %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
ggboxplot(PasttoRef, x = "Split", y = "Distance", add = "jitter")
#Now just summary stats
Dist2RefRows %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2PastRows %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
#Now just summary stats
Dist2RefTimes %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2PastTimes %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
AovAlldist <- aov(Distance ~ Type, data = Dist2RefTimes)
summary(AovAlldist)
TukeyHSD(AovAlldist)
AovAlldist2 <- aov(Distance ~ Type, data = Dist2pastTimes)
summary(AovAlldist2)
AovAlldist2 <- aov(Distance ~ Type, data = Dist2pastTimes)
AovAlldist2 <- aov(Distance ~ Type, data = Dist2PastTimes)
summary(AovAlldist2)
TukeyHSD(AovAlldist2)
AovRefInter <- aov(Distance ~ Type, data = Dist2RefInter)
summary(AovRefInter)
TukeyHSD(AovRefInter)
Dist2RefInter %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2RefInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
AovRefInter <- aov(ScaledDistance ~ Type, data = Dist2RefInter)
summary(AovRefInter)
TukeyHSD(AovRefInter)
Dist2RefInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2RefInter %>%
group_by(Type) %>%
get_summary_stats(Distance, type = "common") %>% ungroup()
Dist2RefRows %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2RefInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2RefTimes %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2RefInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefall <- Dist2PastTimes %>% subset(Type == "Natural_Regeneration")
PasttoRefupper <- PasttoRefall %>% subset(FrequencyCat %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz")) %>% mutate(Split = "Upper")
PasttoRefall$Split <- "All"
PasttoRef <- rbind(PasttoRefall, PasttoRefupper)
AovPastRef <- aov(Distance ~ Split, data = PasttoRef)
summary(AovPastRef)
TukeyHSD(AovPastRef)
PasttoRefall %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefupper %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
#Now just summary stats
Dist2RefInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefall <- Dist2PastTimes %>% subset(Type == "Reference_Forest")
PasttoRefupper <- PasttoRefall %>% subset(FrequencyCat %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz")) %>% mutate(Split = "Upper")
PasttoRefall$Split <- "All"
PasttoRef <- rbind(PasttoRefall, PasttoRefupper)
AovPastRef <- aov(Distance ~ Split, data = PasttoRef)
summary(AovPastRef)
TukeyHSD(AovPastRef)
PasttoRefall %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefupper %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
TukeyHSD(AovPastRef)
PasttoRefall <- Dist2PastTimes %>% subset(Type == "Reference_Forest")
PasttoRefupper <- PasttoRefall %>% subset(FrequencyCat %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz")) %>% mutate(Split = "Upper")
PasttoRefall$Split <- "All"
PasttoRef <- rbind(PasttoRefall, PasttoRefupper)
AovPastRef <- aov(Distance ~ Split, data = PasttoRef)
summary(AovPastRef)
TukeyHSD(AovPastRef)
PasttoRefall %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefupper %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
ggboxplot(PasttoRef, x = "Split", y = "Distance", add = "jitter")
ggplot(Dist2RefTimes[Dist2RefTimes$Type=="Pasture",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Pastures",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
AovPastRef <- aov(Distance ~ Split, data = PasttoRef)
summary(AovPastRef)
TukeyHSD(AovPastRef)
#Now just summary stats
Dist2RefTimes %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2PastTimes %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
c(320:1080, 10)
seq(320, 1080, 10)
PasttoRefall <- Dist2PastTimes %>% subset(Type == "Reference_Forest") %>% subset(Timebin %in% seq(300, 1100, 10))
PasttoRefupper <- PasttoRefall %>% subset(FrequencyCat %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz")) %>% mutate(Split = "Upper")
PasttoRefall$Split <- "All"
PasttoRef <- rbind(PasttoRefall, PasttoRefupper)
AovPastRef <- aov(Distance ~ Split, data = PasttoRef)
summary(AovPastRef)
TukeyHSD(AovPastRef)
PasttoRefall %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefupper %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
#Now just summary stats
Dist2RefInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
#Now just summary stats
Dist2RefTimes %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
ggplot(Dist2RefTimes[Dist2RefTimes$Type=="Natural_Regeneration",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Natural Regeneration",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
ggplot(Dist2RefInter[Dist2RefInter$Type=="Natural_Regeneration",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Natural Regeneration",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
PasttoRefall <- Dist2PastTimes %>% subset(Timebin %in% seq(300, 1100, 10))
source("~/.active-rstudio-document", echo=TRUE)
PasttoRefall <- Dist2PastTimes %>% subset(Timebin %in% seq(300, 1100, 10))
PasttoRefupper <- PasttoRefall %>% subset(FrequencyCat %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz")) %>% mutate(Split = "Upper")
PasttoRefall$Split <- "All"
PasttoRef <- rbind(PasttoRefall, PasttoRefupper)
AovPastRef <- aov(Distance ~ Split, data = PasttoRef)
summary(AovPastRef)
TukeyHSD(AovPastRef)
PasttoRefall %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
PasttoRefupper %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
ggboxplot(PasttoRef, x = "Split", y = "Distance", add = "jitter")
count(unique(Dist2RefInter$Timebin))
unique(Dist2RefInter$Timebin)
unique(Dist2RefInter$FrequencyCat)
View(Dist2Reference)
Dist2Reference %>% count(closest_type)
Dist2Reference %>% subset(nearest_10 %in% includedtimes) %>% subset(FrequencyCat %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz")) %>% count(closest_type)
View(Dist2Reference)
View(Dist2Reference)
Dist2Reference %>% subset(nearest_10 %in% includedtimes) %>% subset(freq_category %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz")) %>% count(closest_type)
length(includedtimes)
plot(x = Dist2Reference$nearest_10, y = Dist2Reference$closest_type)
ggplot(data = Dist2Reference, aes(x = closest_type, y = Timebin)) + geom_point()
ggplot(data = Dist2Reference, aes(x = closest_type, y = nearest_10)) + geom_point()
ggplot(data = Dist2Reference, aes(y = closest_type, x = nearest_10)) + geom_point()
ggplot(data = Dist2Reference, aes(y = freq_category, x = nearest_10, color = closest_type)) + geom_point()
ggplot(data = Dist2Reference, aes(y = freq_category, x = nearest_10, color = distance_nat)) + geom_point()
ggplot(data = Dist2Reference, aes(y = freq_category, x = nearest_10, color = distance_nat)) + geom_tile()
ggplot(data = Dist2Reference, aes(y = freq_category, x = nearest_10, fill = distance_nat)) + geom_tile()
ggplot(Dist2RefInter[Dist2RefInter$Type=="Natural_Regeneration",], aes(x = Timebin, y = FrequencyCat, fill = ScaledDistance)) +
geom_tile() +
facet_wrap(~ Type) +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Heatmap of All Distances: Reference Forest to Natural Regeneration",
x = "Timebin",
y = "Frequency Category",
fill = "Scaled Distance")
Dist2Reference %>% subset(nearest_10 %in% includedtimes) %>% subset(freq_category %in% c("3-4 kHz", "4-5 kHz", "5-6 kHz", "6-7 kHz", "7-8 kHz", "8-9 kHz")) %>% count(closest_type)
Ref2Nat <- Dist2RefInter %>% subset(Type == "Natural_Regeneration") %>% mutate(Cycle = ifelse(Timebin %in% seq(300, 1110, 10), "Day", "Night"))
View(Ref2Nat)
#Is day higher than night?
AovNatDist <- aov(ScaledDistance ~ Cycle, data = Ref2Nat)
summary(Ref2Nat)
#Is day higher than night?
AovNatDist <- aov(ScaledDistance ~ Cycle, data = Ref2Nat)
summary(AovNatDist)
TukeyHSD(AovNatDist)
Ref2Nat %>%
group_by(Cycle) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
AovNatDist <- aov(ScaledDistance ~ FrequencyCat, data = Ref2Nat)
summary(AovNatDist)
TukeyHSD(AovNatDist)
Ref2Nat %>%
group_by(FrequencyCat) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
#Now just summary stats
Dist2RefInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
Dist2PastInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
ggboxplot(DistanceRefinter, x = "Type", y = "meanDistance", add = "point") +
stat_pvalue_manual(pwc.Ref, hide.ns = TRUE) +
labs(
subtitle = get_test_label(results.fried.Ref,  detailed = TRUE),
caption = get_pwc_label(pwc.Ref)
)
custom_order <- c("Natural_Regeneration", "Plantation", "Pasture")
DistanceRefinter$Type <- factor(DistanceRefinter$Type, levels = custom_order)
ggboxplot(DistanceRefinter, x = "Type", y = "meanDistance", add = "point") +
stat_pvalue_manual(pwc.Ref, hide.ns = TRUE) +
labs(
subtitle = get_test_label(results.fried.Ref,  detailed = TRUE),
caption = get_pwc_label(pwc.Ref)
)
Dist2PastInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
#Now just summary stats
Dist2RefInter %>%
group_by(Type) %>%
get_summary_stats(ScaledDistance, type = "common") %>% ungroup()
rfmodel <- randomForest(formula = MeanPMN ~ Ann_Precip + AvgCanopyHeight + Type + EVI + Human.footprint + Elevation + SummedNoise + nearest_10, data = agg_data)
sitesincluded <- list.files('output/')
sitesincluded
145000*0.2
