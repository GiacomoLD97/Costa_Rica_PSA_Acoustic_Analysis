mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>%
subset(select = c(Type, Timebin, meanSimilarity)) %>%
mutate(Period = case_when(
`Timebin` >= 290 & `Timebin` <= 350 ~ "Dawn",
`Timebin` >= 1050 & `Timebin` <= 1110 ~ "Dusk",
`Timebin` > 350 & `Timebin` < 1050 ~ "Day",
TRUE ~ "Night"
)) %>%
subset(select = c(Type, meanSimilarity, Period)) %>%
unique() %>%
ggplot(aes(x = Type, y = meanSimilarity)) +
geom_jitter(aes(color = Period), position = position_jitter(0.2), alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, size = 4, color = "black") +
stat_summary(fun = mean, geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.5, linetype = "solid", color = "black") +
geom_text(data = means_ref.lowslope, aes(x = Type, y = 0.76,
label = paste("Mean", round(meanSimilarity, 2), sep=": ")),
color = "black") +
scale_x_discrete(label = labels) +
stat_pvalue_manual(pwc.Ref.lowslope, hide.ns = TRUE) +
labs(
title = "Acoustic Similarity to Reference for sites that have Medium slopes",
x = "Intervention Type",
y = "Scaled Similarity",
subtitle = get_test_label(results.fried.Ref.lowslope, detailed = TRUE),
caption = get_pwc_label(pwc.Ref.lowslope)
) +
theme_classic2()
#Statistical Test and Post hoc
results.fried.Ref.lowslope <- dist2refslopelow %>% group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>% subset(select = c(Type, Timebin, meanSimilarity)) %>%
unique() %>% friedman_test(meanSimilarity~Type|Timebin)
results.fried.Ref.lowslope
#Post Hoc
pwc.Ref.lowslope <- dist2refslopelow %>% group_by(Type, Timebin) %>% mutate(meanSimilarity = mean(Similarity)) %>%
ungroup() %>% wilcox_test(as.formula(paste("meanSimilarity", "Type", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.Ref.lowslope
custom_order <- c("Pasture", "Plantation", "Natural_Regeneration")
dist2refslopemed$Type <- factor(dist2refslopelow$Type, levels = custom_order)
labels <- c("Pasture", "Plantation", "Natural Regeneration")
pwc.Ref.lowslope <- pwc.Ref.lowslope %>% mutate(y.position = c(0.9, 1.0, 0.95))
means_ref.lowslope <- dist2refslopelow %>%
group_by(Type) %>%
summarise(meanSimilarity = mean(Similarity, na.rm = TRUE))
dist2refslopelow %>%
group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>%
subset(select = c(Type, Timebin, meanSimilarity)) %>%
mutate(Period = case_when(
`Timebin` >= 290 & `Timebin` <= 350 ~ "Dawn",
`Timebin` >= 1050 & `Timebin` <= 1110 ~ "Dusk",
`Timebin` > 350 & `Timebin` < 1050 ~ "Day",
TRUE ~ "Night"
)) %>%
subset(select = c(Type, meanSimilarity, Period)) %>%
unique() %>%
ggplot(aes(x = Type, y = meanSimilarity)) +
geom_jitter(aes(color = Period), position = position_jitter(0.2), alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, size = 4, color = "black") +
stat_summary(fun = mean, geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.5, linetype = "solid", color = "black") +
geom_text(data = means_ref.lowslope, aes(x = Type, y = 0.76,
label = paste("Mean", round(meanSimilarity, 2), sep=": ")),
color = "black") +
scale_x_discrete(label = labels) +
stat_pvalue_manual(pwc.Ref.lowslope, hide.ns = TRUE) +
labs(
title = "Acoustic Similarity to Reference for sites that have Medium slopes",
x = "Intervention Type",
y = "Scaled Similarity",
subtitle = get_test_label(results.fried.Ref.lowslope, detailed = TRUE),
caption = get_pwc_label(pwc.Ref.lowslope)
) +
theme_classic2()
means_ref.lowslope
#Statistical Test and Post hoc
results.fried.Ref.lowslope <- dist2refslopelow %>% group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>% subset(select = c(Type, Timebin, meanSimilarity)) %>%
unique() %>% friedman_test(meanSimilarity~Type|Timebin)
results.fried.Ref.lowslope
#Post Hoc
pwc.Ref.lowslope <- dist2refslopelow %>% group_by(Type, Timebin) %>% mutate(meanSimilarity = mean(Similarity)) %>%
ungroup() %>% wilcox_test(as.formula(paste("meanSimilarity", "Type", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.Ref.lowslope
custom_order <- c("Pasture", "Plantation", "Natural_Regeneration")
dist2refslopemed$Type <- factor(dist2refslopelow$Type, levels = custom_order)
labels <- c("Pasture", "Plantation", "Natural Regeneration")
pwc.Ref.lowslope <- pwc.Ref.lowslope %>% mutate(y.position = c(0.9, 1.0, 0.95))
means_ref.lowslope <- dist2refslopelow %>%
group_by(Type) %>%
summarise(meanSimilarity = mean(Similarity, na.rm = TRUE))
dist2refslopelow %>%
group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>%
subset(select = c(Type, Timebin, meanSimilarity)) %>%
mutate(Period = case_when(
`Timebin` >= 290 & `Timebin` <= 350 ~ "Dawn",
`Timebin` >= 1050 & `Timebin` <= 1110 ~ "Dusk",
`Timebin` > 350 & `Timebin` < 1050 ~ "Day",
TRUE ~ "Night"
)) %>%
subset(select = c(Type, meanSimilarity, Period)) %>%
unique() %>%
ggplot(aes(x = Type, y = meanSimilarity)) +
geom_jitter(aes(color = Period), position = position_jitter(0.2), alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, size = 4, color = "black") +
stat_summary(fun = mean, geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.5, linetype = "solid", color = "black") +
geom_text(data = means_ref.lowslope, aes(x = Type, y = 0.76,
label = paste("Mean", round(meanSimilarity, 2), sep=": ")),
color = "black") +
scale_x_discrete(label = labels) +
stat_pvalue_manual(pwc.Ref.lowslope, hide.ns = TRUE) +
labs(
title = "Acoustic Similarity to Reference for sites that have Medium slopes",
x = "Intervention Type",
y = "Scaled Similarity",
subtitle = get_test_label(results.fried.Ref.lowslope, detailed = TRUE),
caption = get_pwc_label(pwc.Ref.lowslope)
) +
theme_classic2()
View(dist2refbyslope)
View(dist2refslopelow)
#Statistical Test and Post hoc
results.fried.Ref.lowslope <- dist2refslopelow %>% group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>% subset(select = c(Type, Timebin, meanSimilarity)) %>%
unique() %>% friedman_test(meanSimilarity~Type|Timebin)
results.fried.Ref.lowslope
#Post Hoc
pwc.Ref.lowslope <- dist2refslopelow %>% group_by(Type, Timebin) %>% mutate(meanSimilarity = mean(Similarity)) %>%
ungroup() %>% wilcox_test(as.formula(paste("meanSimilarity", "Type", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.Ref.lowslope
custom_order <- c("Pasture", "Plantation", "Natural_Regeneration")
dist2refslopelow$Type <- factor(dist2refslopelow$Type, levels = custom_order)
labels <- c("Pasture", "Plantation", "Natural Regeneration")
pwc.Ref.lowslope <- pwc.Ref.lowslope %>% mutate(y.position = c(0.9, 1.0, 0.95))
means_ref.lowslope <- dist2refslopelow %>%
group_by(Type) %>%
summarise(meanSimilarity = mean(Similarity, na.rm = TRUE))
dist2refslopelow %>%
group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>%
subset(select = c(Type, Timebin, meanSimilarity)) %>%
mutate(Period = case_when(
`Timebin` >= 290 & `Timebin` <= 350 ~ "Dawn",
`Timebin` >= 1050 & `Timebin` <= 1110 ~ "Dusk",
`Timebin` > 350 & `Timebin` < 1050 ~ "Day",
TRUE ~ "Night"
)) %>%
subset(select = c(Type, meanSimilarity, Period)) %>%
unique() %>%
ggplot(aes(x = Type, y = meanSimilarity)) +
geom_jitter(aes(color = Period), position = position_jitter(0.2), alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, size = 4, color = "black") +
stat_summary(fun = mean, geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.5, linetype = "solid", color = "black") +
geom_text(data = means_ref.lowslope, aes(x = Type, y = 0.76,
label = paste("Mean", round(meanSimilarity, 2), sep=": ")),
color = "black") +
scale_x_discrete(label = labels) +
stat_pvalue_manual(pwc.Ref.lowslope, hide.ns = TRUE) +
labs(
title = "Acoustic Similarity to Reference for sites that have Medium slopes",
x = "Intervention Type",
y = "Scaled Similarity",
subtitle = get_test_label(results.fried.Ref.lowslope, detailed = TRUE),
caption = get_pwc_label(pwc.Ref.lowslope)
) +
theme_classic2()
#Statistical Test and Post hoc
results.fried.past.highslope <- dist2pastslopehigh %>% group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>% subset(select = c(Type, Timebin, meanSimilarity)) %>%
unique() %>% friedman_test(meanSimilarity~Type|Timebin)
results.fried.past.highslope
#Post Hoc
pwc.past.highslope <- dist2pastslopehigh %>% group_by(Type, Timebin) %>% mutate(meanSimilarity = mean(Similarity)) %>%
ungroup() %>% wilcox_test(as.formula(paste("meanSimilarity", "Type", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.past.highslope
custom_order <- c("Reference_Forest", "Natural_Regeneration", "Plantation")
dist2pastslopehigh$Type <- factor(dist2pastslopehigh$Type, levels = custom_order)
labels <- c("Reference Forest", "Natural Regeneration", "Plantation")
pwc.past.highslope <- pwc.past.highslope %>% mutate(y.position = c(0.9, 1.0, 0.95))
means_past.highslope <- dist2pastslopehigh %>%
group_by(Type) %>%
summarise(meanSimilarity = mean(Similarity, na.rm = TRUE))
dist2pastslopehigh %>%
group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>%
subset(select = c(Type, Timebin, meanSimilarity)) %>%
mutate(Period = case_when(
`Timebin` >= 290 & `Timebin` <= 350 ~ "Dawn",
`Timebin` >= 1050 & `Timebin` <= 1110 ~ "Dusk",
`Timebin` > 350 & `Timebin` < 1050 ~ "Day",
TRUE ~ "Night"
)) %>%
subset(select = c(Type, meanSimilarity, Period)) %>%
unique() %>%
ggplot(aes(x = Type, y = meanSimilarity)) +
geom_jitter(aes(color = Period), position = position_jitter(0.2), alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, size = 4, color = "black") +
stat_summary(fun = mean, geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.5, linetype = "solid", color = "black") +
geom_text(data = means_past.highslope, aes(x = Type, y = 0.76,
label = paste("Mean", round(meanSimilarity, 2), sep=": ")),
color = "black") +
scale_x_discrete(label = labels) +
stat_pvalue_manual(pwc.past.highslope, hide.ns = TRUE) +
labs(
title = "Acoustic Similarity to pasterence for sites that have high slopes",
x = "Intervention Type",
y = "Scaled Similarity",
subtitle = get_test_label(results.fried.past.highslope, detailed = TRUE),
caption = get_pwc_label(pwc.past.highslope)
) +
theme_classic2()
View(dist2pastslopehigh)
View(dist2pastslopelow)
#Statistical Test and Post hoc
results.fried.past.highslope <- dist2pastslopehigh %>% group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>% subset(select = c(Type, Timebin, meanSimilarity)) %>%
unique() %>% friedman_test(meanSimilarity~Type|Timebin)
results.fried.past.highslope
dist2pastslopehigh %>% group_by(Type, Timebin) %>%
summarize(meanSimilarity = mean(Similarity))
dist2pastslopehigh %>% group_by(Type, Timebin) %>%
summarize(meanSimilarity = mean(Similarity)) %>% head()
dist2pastslopehigh %>% select(Timebin == 50) %>% group_by(Type, Timebin) %>%
summarize(meanSimilarity = mean(Similarity)) %>% head()
dist2pastslopehigh %>% select("Timebin" == 50) %>% group_by(Type, Timebin) %>%
summarize(meanSimilarity = mean(Similarity)) %>% head()
results.fried.past.highslope <- dist2pastslopehigh %>% group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>% subset(select = c(Type, Timebin, meanSimilarity)) %>%
unique()
dist2pastslopehigh %>% group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>% subset(select = c(Type, Timebin, meanSimilarity)) %>%
unique()
#Statistical Test and Post hoc
results.fried.past.highslope <- dist2pastslopehigh %>% group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>% subset(select = c(Type, Timebin, meanSimilarity)) %>%
unique() %>% friedman_test(meanSimilarity~Type|Timebin)
results.fried.past.highslope
#Post Hoc
pwc.past.highslope <- dist2pastslopehigh %>% group_by(Type, Timebin) %>% mutate(meanSimilarity = mean(Similarity)) %>%
ungroup() %>% wilcox_test(as.formula(paste("meanSimilarity", "Type", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.past.highslope
means_past.highslope
#Statistical Test and Post hoc
results.fried.past.lowslope <- dist2pastslopelow %>% group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>% subset(select = c(Type, Timebin, meanSimilarity)) %>%
unique() %>% friedman_test(meanSimilarity~Type|Timebin)
results.fried.past.lowslope
#Post Hoc
pwc.past.lowslope <- dist2pastslopelow %>% group_by(Type, Timebin) %>% mutate(meanSimilarity = mean(Similarity)) %>%
ungroup() %>% wilcox_test(as.formula(paste("meanSimilarity", "Type", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.past.lowslope
custom_order <- c("Reference_Forest", "Natural_Regeneration", "Plantation")
dist2pastslopelow$Type <- factor(dist2pastslopelow$Type, levels = custom_order)
labels <- c("Reference Forest", "Natural Regeneration", "Plantation")
pwc.past.lowslope <- pwc.past.lowslope %>% mutate(y.position = c(0.9, 1.0, 0.95))
means_past.lowslope <- dist2pastslopelow %>%
group_by(Type) %>%
summarise(meanSimilarity = mean(Similarity, na.rm = TRUE))
means_past.lowslope
dist2pastslopelow %>%
group_by(Type, Timebin) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup()  %>%
subset(select = c(Type, Timebin, meanSimilarity)) %>%
mutate(Period = case_when(
`Timebin` >= 290 & `Timebin` <= 350 ~ "Dawn",
`Timebin` >= 1050 & `Timebin` <= 1110 ~ "Dusk",
`Timebin` > 350 & `Timebin` < 1050 ~ "Day",
TRUE ~ "Night"
)) %>%
subset(select = c(Type, meanSimilarity, Period)) %>%
unique() %>%
ggplot(aes(x = Type, y = meanSimilarity)) +
geom_jitter(aes(color = Period), position = position_jitter(0.2), alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, size = 4, color = "black") +
stat_summary(fun = mean, geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.5, linetype = "solid", color = "black") +
geom_text(data = means_past.lowslope, aes(x = Type, y = 0.76,
label = paste("Mean", round(meanSimilarity, 2), sep=": ")),
color = "black") +
scale_x_discrete(label = labels) +
stat_pvalue_manual(pwc.past.lowslope, hide.ns = TRUE) +
labs(
title = "Acoustic Similarity to pasture for sites that have Medium slopes",
x = "Intervention Type",
y = "Scaled Similarity",
subtitle = get_test_label(results.fried.past.lowslope, detailed = TRUE),
caption = get_pwc_label(pwc.past.lowslope)
) +
theme_classic2()
#Format data
Distplantslopehigh <- dist2pastslopehigh %>% subset(Type == "Plantation") %>%
subset(select = -Type)
colnames(Distplantslopehigh)[3:4] <- c("DistancetoPast", "Sim2Pasture")
temp <- dist2refslopehigh %>% subset(Type == "Plantation") %>%
subset(select = -Type)
colnames(temp)[3:4] <- c("DistancetoRef", "Sim2Ref")
Distplantslopehigh <- merge(Distplantslopehigh, temp, by = c("Timebin", "FrequencyCat"))
#Add the Distance Differential
Distplantslopehigh <- Distplantslopehigh %>% mutate(DistDiff = ifelse(DistancetoRef < DistancetoPast,
((DistancetoPast-DistancetoRef)/DistancetoRef)*100,
((DistancetoPast-DistancetoRef)/DistancetoPast)*100))
#Statistical Test
results.fried.plant.slopehigh <- Distplantslopehigh %>%
subset(select = c(Timebin, FrequencyCat, DistancetoPast, DistancetoRef)) %>%
pivot_longer(cols = starts_with("Dist"), names_to = "Baseline", values_to= "Distance") %>%
group_by(Timebin, Baseline) %>% mutate(meanDistance = mean(Distance)) %>% ungroup() %>%
subset(select = c(Timebin, Baseline, meanDistance)) %>% unique() %>%
friedman_test(meanDistance~Baseline|Timebin)
results.fried.plant.slopehigh
pwc.plant.slopehigh <- Distplantslopehigh %>%
subset(select = c(Timebin, FrequencyCat, DistancetoPast, DistancetoRef)) %>%
pivot_longer(cols = starts_with("Dist"), names_to = "Baseline", values_to= "Distance") %>%
group_by(Timebin, Baseline) %>% mutate(meanDistance = mean(Distance)) %>% ungroup() %>%
subset(select = c(Timebin, Baseline, meanDistance)) %>%
wilcox_test(as.formula(paste("meanDistance", "Baseline", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.plant.slopehigh
#Summary
mean(Distplantslopehigh$DistDiff)
mean(Distplantslopehigh$DistancetoRef)
mean(Distplantslopehigh$DistancetoPast)
#Format data
DistNatRegslopehigh <- dist2pastslopehigh %>% subset(Type == "Natural_Regeneration") %>%
subset(select = -Type)
colnames(DistNatRegslopehigh)[3:4] <- c("DistancetoPast", "Sim2Pasture")
temp <- dist2refslopehigh %>% subset(Type == "Natural_Regeneration") %>%
subset(select = -Type)
colnames(temp)[3:4] <- c("DistancetoRef", "Sim2Ref")
DistNatRegslopehigh <- merge(DistNatRegslopehigh, temp, by = c("Timebin", "FrequencyCat"))
#Add the Distance Differential
DistNatRegslopehigh <- DistNatRegslopehigh %>% mutate(DistDiff = ifelse(DistancetoRef < DistancetoPast,
((DistancetoPast-DistancetoRef)/DistancetoRef)*100,
((DistancetoPast-DistancetoRef)/DistancetoPast)*100))
#Statistical Test
results.fried.nat.slopehigh <- DistNatRegslopehigh %>%
subset(select = c(Timebin, FrequencyCat, DistancetoPast, DistancetoRef)) %>%
pivot_longer(cols = starts_with("Dist"), names_to = "Baseline", values_to= "Distance") %>%
group_by(Timebin, Baseline) %>% mutate(meanDistance = mean(Distance)) %>% ungroup() %>%
subset(select = c(Timebin, Baseline, meanDistance)) %>% unique() %>%
friedman_test(meanDistance~Baseline|Timebin)
results.fried.nat.slopehigh
pwc.Nat.slopehigh <- DistNatRegslopehigh %>%
subset(select = c(Timebin, FrequencyCat, DistancetoPast, DistancetoRef)) %>%
pivot_longer(cols = starts_with("Dist"), names_to = "Baseline", values_to= "Distance") %>%
group_by(Timebin, Baseline) %>% mutate(meanDistance = mean(Distance)) %>% ungroup() %>%
subset(select = c(Timebin, Baseline, meanDistance)) %>%
wilcox_test(as.formula(paste("meanDistance", "Baseline", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.Nat.slopehigh
#Summary
mean(DistNatRegslopehigh$DistDiff)
mean(DistNatRegslopehigh$DistancetoRef)
mean(DistNatRegslopehigh$DistancetoPast)
#Format data
Distplantslopehigh <- dist2pastslopehigh %>% subset(Type == "Plantation") %>%
subset(select = -Type)
colnames(Distplantslopehigh)[3:4] <- c("DistancetoPast", "Sim2Pasture")
temp <- dist2refslopehigh %>% subset(Type == "Plantation") %>%
subset(select = -Type)
colnames(temp)[3:4] <- c("DistancetoRef", "Sim2Ref")
Distplantslopehigh <- merge(Distplantslopehigh, temp, by = c("Timebin", "FrequencyCat"))
#Add the Distance Differential
Distplantslopehigh <- Distplantslopehigh %>% mutate(DistDiff = ifelse(DistancetoRef < DistancetoPast,
((DistancetoPast-DistancetoRef)/DistancetoRef)*100,
((DistancetoPast-DistancetoRef)/DistancetoPast)*100))
#Statistical Test
results.fried.plant.slopehigh <- Distplantslopehigh %>%
subset(select = c(Timebin, FrequencyCat, DistancetoPast, DistancetoRef)) %>%
pivot_longer(cols = starts_with("Dist"), names_to = "Baseline", values_to= "Distance") %>%
group_by(Timebin, Baseline) %>% mutate(meanDistance = mean(Distance)) %>% ungroup() %>%
subset(select = c(Timebin, Baseline, meanDistance)) %>% unique() %>%
friedman_test(meanDistance~Baseline|Timebin)
results.fried.plant.slopehigh
pwc.plant.slopehigh <- Distplantslopehigh %>%
subset(select = c(Timebin, FrequencyCat, DistancetoPast, DistancetoRef)) %>%
pivot_longer(cols = starts_with("Dist"), names_to = "Baseline", values_to= "Distance") %>%
group_by(Timebin, Baseline) %>% mutate(meanDistance = mean(Distance)) %>% ungroup() %>%
subset(select = c(Timebin, Baseline, meanDistance)) %>%
wilcox_test(as.formula(paste("meanDistance", "Baseline", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.plant.slopehigh
#Summary
mean(Distplantslopehigh$DistDiff)
mean(Distplantslopehigh$DistancetoRef)
mean(Distplantslopehigh$DistancetoPast)
#Format data
DistNatRegslopelow <- dist2pastslopelow %>% subset(Type == "Natural_Regeneration") %>%
subset(select = -Type)
colnames(DistNatRegslopelow)[3:4] <- c("DistancetoPast", "Sim2Pasture")
temp <- dist2refslopelow %>% subset(Type == "Natural_Regeneration") %>%
subset(select = -Type)
colnames(temp)[3:4] <- c("DistancetoRef", "Sim2Ref")
DistNatRegslopelow <- merge(DistNatRegslopelow, temp, by = c("Timebin", "FrequencyCat"))
#Add the Distance Differential
DistNatRegslopelow <- DistNatRegslopelow %>% mutate(DistDiff = ifelse(DistancetoRef < DistancetoPast,
((DistancetoPast-DistancetoRef)/DistancetoRef)*100,
((DistancetoPast-DistancetoRef)/DistancetoPast)*100))
#Statistical Test
results.fried.nat.slopelow <- DistNatRegslopelow %>%
subset(select = c(Timebin, FrequencyCat, DistancetoPast, DistancetoRef)) %>%
pivot_longer(cols = starts_with("Dist"), names_to = "Baseline", values_to= "Distance") %>%
group_by(Timebin, Baseline) %>% mutate(meanDistance = mean(Distance)) %>% ungroup() %>%
subset(select = c(Timebin, Baseline, meanDistance)) %>% unique() %>%
friedman_test(meanDistance~Baseline|Timebin)
results.fried.nat.slopelow
pwc.Nat.slopelow <- DistNatRegslopelow %>%
subset(select = c(Timebin, FrequencyCat, DistancetoPast, DistancetoRef)) %>%
pivot_longer(cols = starts_with("Dist"), names_to = "Baseline", values_to= "Distance") %>%
group_by(Timebin, Baseline) %>% mutate(meanDistance = mean(Distance)) %>% ungroup() %>%
subset(select = c(Timebin, Baseline, meanDistance)) %>%
wilcox_test(as.formula(paste("meanDistance", "Baseline", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.Nat.slopelow
#Summary
mean(DistNatRegslopelow$DistDiff)
mean(DistNatRegslopelow$DistancetoRef)
mean(DistNatRegslopelow$DistancetoPast)
#Format data
Distplantslopelow <- dist2pastslopelow %>% subset(Type == "Plantation") %>%
subset(select = -Type)
colnames(Distplantslopelow)[3:4] <- c("DistancetoPast", "Sim2Pasture")
temp <- dist2refslopelow %>% subset(Type == "Plantation") %>%
subset(select = -Type)
colnames(temp)[3:4] <- c("DistancetoRef", "Sim2Ref")
Distplantslopelow <- merge(Distplantslopelow, temp, by = c("Timebin", "FrequencyCat"))
#Add the Distance Differential
Distplantslopelow <- Distplantslopelow %>% mutate(DistDiff = ifelse(DistancetoRef < DistancetoPast,
((DistancetoPast-DistancetoRef)/DistancetoRef)*100,
((DistancetoPast-DistancetoRef)/DistancetoPast)*100))
#Statistical Test
results.fried.plant.slopelow <- Distplantslopelow %>%
subset(select = c(Timebin, FrequencyCat, DistancetoPast, DistancetoRef)) %>%
pivot_longer(cols = starts_with("Dist"), names_to = "Baseline", values_to= "Distance") %>%
group_by(Timebin, Baseline) %>% mutate(meanDistance = mean(Distance)) %>% ungroup() %>%
subset(select = c(Timebin, Baseline, meanDistance)) %>% unique() %>%
friedman_test(meanDistance~Baseline|Timebin)
results.fried.plant.slopelow
pwc.plant.slopelow <- Distplantslopelow %>%
subset(select = c(Timebin, FrequencyCat, DistancetoPast, DistancetoRef)) %>%
pivot_longer(cols = starts_with("Dist"), names_to = "Baseline", values_to= "Distance") %>%
group_by(Timebin, Baseline) %>% mutate(meanDistance = mean(Distance)) %>% ungroup() %>%
subset(select = c(Timebin, Baseline, meanDistance)) %>%
wilcox_test(as.formula(paste("meanDistance", "Baseline", sep="~")), paired = TRUE, p.adjust.method = "bonferroni")
pwc.plant.slopelow
#Summary
mean(Distplantslopelow$DistDiff)
mean(Distplantslopelow$DistancetoRef)
mean(Distplantslopelow$DistancetoPast)
dist2refslopehigh$slopeDist <- "High"
dist2refslopemedium$slopeDist <- "Medium"
dist2refslopelow$slopeDist <- "Low"
dist2refslopehigh$slopeDist <- "High"
dist2refslopelow$slopeDist <- "Low"
dist2refrows <- rbind(dist2refslopehigh,dist2refslopelow)
labels <- c("Pasture", "Plantation", "Natural Regeneration")
dist2refrows %>%
group_by(Type, Timebin, slopeDist) %>%
mutate(meanSimilarity = mean(Similarity)) %>%
ungroup() %>%
subset(select = c(Type, Timebin, meanSimilarity, slopeDist)) %>%
mutate(Period = case_when(
`Timebin` >= 290 & `Timebin` <= 350 ~ "Dawn",
`Timebin` >= 1050 & `Timebin` <= 1110 ~ "Dusk",
`Timebin` > 350 & `Timebin` < 1050 ~ "Day",
TRUE ~ "Night"
)) %>%
subset(select = c(Type, meanSimilarity, Period, slopeDist)) %>%
unique() %>%
mutate(slopeDist = factor(slopeDist, levels = c("Low", "Medium", "High"))) %>%
ggplot(aes(x = interaction(Type, slopeDist), y = meanSimilarity)) +
geom_jitter(aes(color = Period), position = position_jitter(0.2), alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, size = 4, color = "black") +
stat_summary(fun = mean, geom = "errorbar",
aes(ymax = ..y.., ymin = ..y..),
width = 0.5, linetype = "solid", color = "black") +
stat_summary(fun = mean, geom = "text",
aes(label = round(..y.., 2)),
vjust = -1.6, color = "black", size = 4) +
theme_classic2() +
labs(y = "Mean Acoustic Similarity to Reference Forests", x = "Grouping") +
scale_x_discrete(
labels = function(x) gsub("\\.", " × ", x),
expand = expansion(add = 1)
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
panel.spacing.x = unit(1, "lines")
)
ggsave('figures/SupplementaryFigure6_stripplot_Distancetoslope.pdf')
distancetoroad <- read.csv("~/Documents/GitHub/Costa_Rica_PSA_Acoustic_Analysis/data/site_locations_distanceToRoad.csv")
max(distancetoroad$distanceToRoad)
